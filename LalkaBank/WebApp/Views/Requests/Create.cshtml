@model WebApp.Models.Domains.Requests.CreateRequestViewModel

@{
    ViewBag.Title = "Create request";
    var resStr = !string.IsNullOrEmpty(ViewBag.ResultMsg) ? ViewBag.ResultMsg.ToString() : "";
    var res = ViewBag.Result != null ? ViewBag.Result.ToString() : "false";
}

<div class="row lb-margin">

    @if (ViewBag.Result != null && ViewBag.ResultMsg != null)
    {
        <div class="row">
            <div id="ban_result" class="alert alert-dismissable fade-in" role="alert">
                @ViewBag.ResultMsg
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
    }

    @using (Html.BeginForm("Create", "Requests", FormMethod.Post, new
    {
        @class = "form-horizontal",
        role = "form", enctype = "multipart/form-data"
    }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.ValidationSummary("", new {@class = "text-danger"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreditTypeId)
            @Html.DropDownListFor(m => m.CreditTypeId, Model.CreditTypes, new {@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.StartSum)
            @Html.EditorFor(m => m.StartSum, new {htmlAttributes = new {@class = "form-control"}})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreditInfo)
            @Html.TextBoxFor(m => m.CreditInfo, new {@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.IncomeImage)
            @Html.TextBoxFor(m => m.IncomeImage, new {type = "file", @class = "form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.GuarantorImage)
            @Html.TextBoxFor(m => m.GuarantorImage, new { type = "file", @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FamilyStatus)
            @Html.DropDownListFor(m => m.FamilyStatus, Model.FamilyStatusList, new {@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.HaveChildren)
            @Html.CheckBoxFor(m => m.HaveChildren)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Education)
            @Html.DropDownListFor(m => m.Education, Model.EducationList, new {@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.HaveVehicle)
            @Html.CheckBoxFor(m => m.HaveVehicle)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.WorkExperience)
            @Html.EditorFor(m => m.WorkExperience, new {htmlAttributes = new {@class = "form-control"}})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.WorkChangeCount)
            @Html.DropDownListFor(m => m.WorkChangeCount, Model.WorkChangeCountList, new {@class = "form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Earnings)
            @Html.EditorFor(m => m.Earnings, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-default" value="create request"/>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        jQuery(function ($) {
            if ($('[type="date"]').prop('type') != 'date') {
                $('[type="date"]').datepicker();
            }

            var banResultLabel = $('#ban_result');
           if ('@res' === 'True') {
               banResultLabel.addClass('alert-success');
              
           } else {
               banResultLabel.addClass('alert-danger');
           }

            banResultLabel.fadeTo(5000, 0);
        })
    </script>
}



